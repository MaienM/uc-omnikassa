<?php
// vi:ft=php:fdm=indent

require_once 'uc_omnikassa.helper.inc';

/**
 * @file
 * A payment module for Ubercart that provides Rabobank Omnikassa payment.
 */

/**
 * The help function for this module.
 */
function uc_omnikassa_help($path, $arg) {
  switch ($path) {
    case "admin/help#uc_omnikassa":
      return '<p>' . t('Provides Rabobank Omnikassa as a payment method for Ubercart') . '</p>';
      break;
  }
}

/** 
 * Implements hook_menu.
 *
 * Provides a list of all pages this module has.
 */
function uc_omnikassa_menu() {
  $items['uc_omnikassa/complete'] = array(
    'title' => 'OmniKassa Payment Completion',
    'page callback' => 'uc_omnikassa_complete',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'uc_omnikassa.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_uc_payment_method().
 *
 * Makes the payment method selectable by users.
 */
function uc_omnikassa_uc_payment_method() {
  // Build the title string.
  $title = '<img src="" class="uc-omnikassa-cctype" />';
  $title .= ' ' . t('Rabobank OmniKassa');

  // Available payment types.
  $title .= '<br /><span id="omnikassa-includes">' . t('Includes:');
  $payment_types = array_filter(variable_get('uc_omnikassa_payment_methods'));
  foreach ($payment_types as $type) {
    $type = strtolower($type);
    $title .= ' ' . theme('image', array(
      'path' => drupal_get_path('module', "uc_omnikassa") . "/images/$type.gif",
      'attributes' => array('class' => array('uc-omnikassa-cctype', "uc-omnikassa-cctype-$type")),
    ));
  }

  $methods[] = array(
    'id' => 'omnikassa',
    'name' => t('OmniKassa'),
    'title' => $title,
    'review' => t('OmniKassa'),
    'desc' => t('Redirect users to submit payments through OmniKassa.'),
    'callback' => 'uc_payment_method_omnikassa',
    'redirect' => 'uc_omnikassa_form',
    'weight' => 1,
    'checkout' => FALSE,
    'no_gateway' => TRUE,
  );

  return $methods;
}

/**
 * The settings page and order overview hook for this payment method.
 */
function uc_payment_method_omnikassa($op, &$order) {
  switch ($op) {
    case 'order-view':
      $node = db_query("SELECT reference, brand, ident FROM {uc_payment_omnikassa} WHERE order_id = :id ORDER BY received DESC", array(':id' => $order->order_id))->fetchAssoc();

      // The transaction reference and brand default to "Unknown" if... well, unknown.
      if (empty($node['reference'])) {
        $node['reference'] = t('Unknown');
      }
      if (empty($node['brand'])) {
        $node['brand'] = t('Unknown');
      }

      // Add the brand (iDeal, VISA, etc).
      $build['#markup'] = t('Paid with @brand', array('@brand' => $node['brand']));

      // If applicable, add the masked account number.
      if (!empty($node['ident'])) {
        $build['#markup'] .= '<br />' . t('Account number: @ident', array('@ident' => $node['ident']));
      }

      // Add the transaction reference.
      $build['#markup'] .= '<br />' . t('Transaction ID: @reference', array('@reference' => $node['reference']));

      return $build;

    case 'settings':
      // The test mode checkbox.
      $form['uc_omnikassa_test'] = array(
        '#type' => 'checkbox',
        '#title' => t('OmniKassa test environment enabled.'),
        '#description' => t('Use the test server, instead of the live server. This can be used to test various situations (failed payments, etc) to see how the module handles this. See the technical document (available from the rabobank website) for more details.'),
        '#default_value' => variable_get('uc_omnikassa_test', TRUE),
      );

      // The merchant details. Only shown when NOT in test mode.
      $form['uc_merchant_details'] = array(
        '#type' => 'container',
        '#states' => array(
          'invisible' => array(
            ':input[name="uc_omnikassa_test"]' => array('checked' => TRUE),
          ),
        ),
      );
      $form['uc_merchant_details']['uc_omnikassa_merchantid'] = array(
        '#type' => 'textfield',
        '#title' => t('OmniKassa merchant id'),
        '#description' => t('The merchant id for the OmniKassa account you want to receive payments.'),
        '#default_value' => variable_get('uc_omnikassa_merchantid', ''),
      );
      $form['uc_merchant_details']['uc_omnikassa_key'] = array(
        '#type' => 'textfield',
        '#title' => t('Secret key'),
        '#description' => t('The secret key of your OmniKassa account.'),
        '#default_value' => variable_get('uc_omnikassa_key', ''),
      );
      $form['uc_merchant_details']['uc_omnikassa_key_version'] = array(
        '#type' => 'textfield',
        '#title' => t('OmniKassa key version'),
        '#description' => t('The key version of your secret key.'),
        '#default_value' => variable_get('uc_omnikassa_key_version', ''),
      );

      $form['uc_omnikassa_currency'] = array(
        '#type' => 'select',
        '#title' => t('Currency code'),
        '#description' => t('Transactions can only be processed in one of the listed currencies.'),
        '#options' => array(
          '978' => t('Euro'), 
          '840' => t('American Dollar'),
          '756' => t('Swiss Franc'),
          '826' => t('Pound'),
          '124' => t('Canadian Dollar'),
          '392' => t('Yen'),
          '036' => t('Australian Dollar'),
          '578' => t('Norwegian Crown'),
          '752' => t('Swedish Crown'),
          '208' => t('Danish Crown'),
        ),          
        '#default_value' => variable_get('uc_omnikassa_currency', '978'),
      );
      $form['uc_omnikassa_payment_methods'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Payment methods'),
        '#description' => t('Which payment methods do you want OmniKassa to provide?'),
        '#options' => array(
          'IDEAL' => 'iDeal',
          'MINITIX' => 'MiniTix', 
          'VISA' => 'Visa',
          'MASTERCARD' => 'MasterCard',
          'MAESTRO' => 'Maestro',
          'INCASSO' => 'Automatische Incasso',
          'ACCEPTGIRO' => 'Acceptgiro',
          'REMBOURS' => 'Rembours',
        ),
        '#default_value' => variable_get('uc_omnikassa_payment_methods', array('IDEAL', 'MINITIX', 'VISA', 'MASTERCARD', 'MAESTRO')),
      );
      $form['uc_omnikassa_timeout'] = array(
        '#type' => 'textfield',
        '#title' => t('Payment timeout'),
        '#description' => t('After how many minutes do you want the payment to time out?'),
        '#precision' => 1,
        '#minimum' => 1,
        '#maximum' => 60,
        '#default_value' => variable_get('uc_omnikassa_timeout', '10'),
      );

      $form['uc_omnikassa_checkout_button'] = array(
        '#type' => 'textfield',
        '#title' => t('Order review submit button text'),
        '#description' => t('Provide OmniKassa specific text for the submit button on the order review page.'),
        '#default_value' => variable_get('uc_omnikassa_checkout_button', t('Submit Order')),
      );

      return $form;
  }
}

/**
 * Returns the form elements for the form.
 */
function uc_omnikassa_form($form, &$form_state, $order) {
  // The payment url.
  $form['#action'] = variable_get('uc_omnikassa_test', TRUE) ? 'https://payment-webinit.simu.omnikassa.rabobank.nl/paymentServlet' : 'https://payment-webinit.omnikassa.rabobank.nl/paymentServlet';

  // Payment data.
  $url = url('uc_omnikassa/complete', array('absolute' => TRUE));
  $omnidata = array(
    'currencyCode'         => variable_get('uc_omnikassa_currency'),
    'merchantId'           => variable_get('uc_omnikassa_test', TRUE) ? '002020000000001' : variable_get('uc_omnikassa_merchantid'),
    'keyVersion'           => variable_get('uc_omnikassa_test', TRUE) ? '1' : variable_get('uc_omnikassa_key_version'),
    'paymentMeanBrandList' => implode(',', array_filter(variable_get('uc_omnikassa_payment_methods'))),
    'normalReturnUrl'      => $url,
    'automaticResponseUrl' => $url,
    //'expirationDate'       => date(DateTime::ISO8601, time() + 60 * variable_get('uc_omnikassa_timeout')),
    'amount'               => (int)($order->order_total * 100),
    'transactionReference' => substr(md5(rand()), 0, 8) . $order->order_id,
    'orderId'              => $order->order_id,
  );
  $omnidata                 = uc_omnikassa_makedata($omnidata);
  $omniseal                 = uc_omnikassa_makeseal($omnidata);
  $form['Data']             = array('#type' => 'hidden', '#value' => $omnidata);
  $form['Seal']             = array('#type' => 'hidden', '#value' => $omniseal);
  $form['InterfaceVersion'] = array('#type' => 'hidden', '#value' => 'HP_1.0');

  foreach ($data as $name => $value) {
    if (!empty($value)) {
      $form[$name] = array('#type' => 'hidden', '#value' => $value);
    }
  }

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => variable_get('uc_omnikassa_checkout_button', t('Submit Order')),
  );

  return $form;
}

